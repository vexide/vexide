[package]
name = "examples"
edition = "2021"
version = "0.0.1"

[profile.release]
opt-level = "z"
lto = "fat"

[package.metadata.v5]
upload-strategy = "differential"
slot = 1
icon = "cool-x"
compress = true

[dev-dependencies]
vexide = { path = "packages/vexide", features = ["full", "vex-sdk-jumptable"] }

[workspace]
members = ["packages/*"]
resolver = "2"

[workspace.dependencies]
snafu = { version = "0.8.0", default-features = false, features = [
    "rust_1_61",
    "unstable-core-error",
] }
vexide-async = { version = "0.1.9", path = "packages/vexide-async", default-features = false }
vexide-core = { version = "0.7.0", path = "packages/vexide-core", default-features = false }
vexide-devices = { version = "0.7.0", path = "packages/vexide-devices", default-features = false }
vexide-startup = { version = "0.4.2", path = "packages/vexide-startup", default-features = false }
vexide-macro = { version = "0.3.2", path = "packages/vexide-macro", default-features = false }
vex-sdk = { git = "https://github.com/vexide/vex-sdk.git" }

[workspace.lints.rust]
rust_2018_idioms = { level = "warn", priority = -1 }
rust_2024_compatibility = { level = "warn", priority = -1 }
future_incompatible = { level = "warn", priority = -1 }
let_underscore = { level = "warn", priority = -1 }
missing_docs = "warn"
unsafe_op_in_unsafe_fn = "deny"
unexpected_cfgs = { level = "warn", check-cfg = [
    'cfg(target_vendor, values("vex"))',
] }

[workspace.lints.clippy]
missing_const_for_fn = "warn"
pedantic = { level = "warn", priority = -1 }
module_name_repetitions = "allow"
doc_markdown = "allow"
cast_possible_truncation = "allow"
cast_sign_loss = "allow"
missing_panics_doc = "allow"
cast_possible_wrap = "allow"
match_bool = "allow"
